@using ArtCosplay.Data
@using ArtCosplay.Data.DB
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using ArtCosplay.Models
@model Tuple<ArtPageFindViewModel,CreatePostViewModel>

@inject AppDbContext DbContext
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Арты/Косплеи";

    int postId = Convert.ToInt32(ViewData["postId"]);

    int page = Model.Item1.Page ?? 1;
    var posts = DbContext.Posts
        .Include(d => d.Author)
        .Include(d => d.Comments)
        .Include(d => d.Likes)
        .OrderByDescending(x => x.CreatedAt)
        .ToList();

    if (Model.Item1.Sort != null)
    {
        if (Model.Item1.Sort == "popular")
            posts = posts.OrderByDescending(x => x.Likes.Count).ToList();
        if (Model.Item1.Sort == "comments")
            posts = posts.OrderByDescending(x => x.Comments.Count).ToList();
    }

    if (Model.Item1.FilterType != null)
    {
        if (Model.Item1.FilterType == "art")
            posts = posts.Where(x => x.Type == "art").ToList();
        else if (Model.Item1.FilterType == "cosplay")
            posts = posts.Where(x => x.Type == "cosplay").ToList();
    }

    if (Model.Item1.Filter != null)
    {
        posts = posts.Where(x => x.Content.ToLower().Contains(Model.Item1.Filter.ToLower()) || x.Title.ToLower().Contains(Model.Item1.Filter.ToLower()))
            .ToList();
    }

    if(Model.Item1.CharacterId != null)
    {
        posts = posts.Where(x => x.CharacterId == (Model.Item1.CharacterId == 0 ? null : Model.Item1.CharacterId)).ToList();
    }

    int maxPage = Convert.ToInt32(Math.Ceiling(posts.ToList().Count / 5.0));

    if (maxPage == 0)
        maxPage = 1;

    if (page > maxPage)
        page = maxPage;
    else if (page <= 0)
        page = 1;

    var toShow = new List<Post>();
    var chunks = posts.Chunk(5);

    if (chunks.Count() != 0)
    {
        toShow = chunks.ElementAt(page - 1).ToList();
    }
}

<div class="arts-container">
    <div class="arts-list">
        <h1 class="arts-title">Арты и косплеи</h1>

        <form asp-action="ArtPage" asp-controller="Home" method="get">
            <div class="arts-search">
                <input type="text" placeholder="Поиск по артам и косплеям..." asp-for="Item1.Filter" class="input-search" name="Filter">
                <button type="submit"><i class="fas fa-search"></i> Найти</button>
            </div>

            <div class="arts-filters">
                <label class="filter-tab">
                    <input type="radio" value="" asp-for="Item1.FilterType" style="display: none;" name="FilterType" checked>
                    <span>Все</span>
                </label>

                <label class="filter-tab">
                    <input type="radio" value="art" asp-for="Item1.FilterType" style="display: none;" name="FilterType">
                    <span>Арты</span>
                </label>
                <label class="filter-tab">
                    <input type="radio" value="cosplay" asp-for="Item1.FilterType" style="display: none;" name="FilterType">
                    <span>Косплеи</span>
                </label>

                <select class="filter-select" asp-for="Item1.Sort" name="Sort">
                    <option value="0">Сначала новые</option>
                    <option value="popular">Сначала популярные</option>
                    <option value="comments">Сначала обсуждаемые</option>
                </select>

                <select class="filter-select" asp-for="Item1.CharacterId" name="CharacterId">
                    <option value="">Все персонажи</option>
                    @foreach (var character in DbContext.Characters)
                    {
                        <option value="@character.CharacterId">@character.Name</option>
                    }
                    <option value="0">Другое</option>
                </select>
            </div>
        </form>

        @foreach(var item in toShow)
        {
            <div class="art-item">
                <a href="@Url.Action("Profile", "Home", new {Id = item.AuthorId})">
                    <div class="art-header">
                        <img src="@item.Author.AvatarUrl" alt="Аватар" class="art-avatar">
                        <div>
                            <span class="art-user">@item.Author.UserName</span>
                            <span class="art-time">@item.CreatedAt</span>
                        </div>
                    </div>
                </a>
                <a href="@Url.Action("Post", "Home", new { id = item.PostId})" style="text-decoration: none;">
                    <p class="art-title">@item.Title</p>
                    <img src="@item.ImageUrl" alt="Арт" class="art-image">
                    <p class="art-text">@item.Content</p>
                    <div class="art-actions">
                        <div class="art-action">
                            <i class="far fa-thumbs-up"></i>
                            <span>@item.Likes.Count</span>
                        </div>
                        <div class="art-action">
                            <i class="far fa-comment"></i>
                            <span>@item.Comments.Count</span>
                        </div>
                    </div>
                </a>
            </div>
        }

        @if (posts.Count != 0)
        {
            <div class="pagination">
                @if (page != 1)
                {
                    <a href="@Url.Action("ArtPage", "Home", new {Page = Model.Item1 != null ?  Model.Item1.Page == null ? 1 : Model.Item1.Page - 1 : 1, Filter = Model.Item1.Filter, FilterType = Model.Item1.FilterType, Sort = Model.Item1.Sort, CharacterId = Model.Item1.CharacterId})" class="page-number">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                }
                <p class="page-number active">@(page)</p>
                @if (page != maxPage)
                {
                    <a href="@Url.Action("ArtPage", "Home", new {Page = Model.Item1 != null ?  Model.Item1.Page == null ? 2 : Model.Item1.Page + 1 : 2, Filter = Model.Item1.Filter, FilterType = Model.Item1.FilterType, Sort = Model.Item1.Sort, CharacterId = Model.Item1.CharacterId})" class="page-number">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                }
            </div>
        }
        else
        {
            <span>Нет ещё артов!</span>
        }
    </div>
    @if (SignInManager.IsSignedIn(User))
    {
        <aside class="create-art">
            <h2 class="create-title">Создать новый пост</h2>
            <form method="post" asp-action="ArtPage" asp-controller="Home" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly"></div>
                <div class="form-group">
                    <label for="art-title">Заголовок</label>
                    <input asp-for="Item2.Title" name="Title" type="text" id="art-title" placeholder="Название вашего арта/косплея">
                </div>

                <div class="file-upload">
                    <div class="file-upload-icon">
                        <i class="fas fa-cloud-upload-alt"></i>
                    </div>
                    <span>Перетащите сюда изображение или кликните для загрузки</span>
                    <input asp-for="Item2.Image" name="Image" type="file" id="art-file" accept="image/*" style="display: none;">
                </div>

                <div class="form-group">
                    <label name="Content" for="art-text">Описание</label>
                    <textarea asp-for="Item2.Content" name="Content" id="art-text" placeholder="Расскажите о своем творении, используемых материалах и т.д." style="height: 120px;"></textarea>
                </div>
                @* 
            <div class="form-group">
                <label for="art-tags">Теги (через запятую)</label>
                <input type="text" id="art-tags" placeholder="например: косплей, арт, digital, акварель">
            </div> *@

                <div class="post-type" style="margin-bottom: 10px">
                    <label class="filter-tab">
                        <input asp-for="Item2.Type" type="radio" value="art" name="Type" style="display: none;" checked="checked">
                        <span>Арт</span>
                    </label>
                    <label class="filter-tab">
                        <input asp-for="Item2.Type" type="radio" value="cosplay" name="Type" style="display: none;">
                        <span>Косплей</span>
                    </label>
                </div>
                <div class="post-character">
                    <p>Персонаж</p>
                    <select class="filter-select" asp-for="Item2.CharacterId" name="CharacterId">
                        <option value="0">Другое</option>
                        @foreach (var character in DbContext.Characters)
                        {
                            <option value="@character.CharacterId">@character.Name</option>
                        }
                    </select>
                </div>

                <button type="submit" class="submit-btn">Опубликовать</button>
            </form>
        </aside>
    }
</div>

<script src="/js/artSendLogic.js"></script>