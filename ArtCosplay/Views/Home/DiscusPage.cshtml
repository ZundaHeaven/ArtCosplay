@model ArtCosplay.Models.CreateDiscusViewModel
@using ArtCosplay.Data
@using ArtCosplay.Data.DB
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore

@inject AppDbContext DbContext
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Обсуждения";

    int discussionId = Convert.ToInt32(ViewData["DiscussionId"]);

    int page = Convert.ToInt32(ViewData["Page"] ?? 1);
    string? filter = null;
    var discussions = DbContext.Discussions
        .Include(d => d.Author)
        .Include(d => d.Comments)
        .Include(d => d.Likes)
        .OrderByDescending(x => x.CreatedAt)
        .ToList();

    if (ViewData["Filter"] != null)
    {
        filter = ViewData["Filter"].ToString();
        discussions = discussions.Where(x => x.Content.ToLower().Contains(filter.ToLower()) || x.Title.ToLower().Contains(filter.ToLower()))
            .ToList();
    }

    int maxPage = Convert.ToInt32(Math.Ceiling(discussions.ToList().Count / 5.0));

    if (page > maxPage)
        page = maxPage;
    
    else if(page <= 0)
        page = 1;
    

    var toShow = new List<Discussion>();
    var chunks = discussions.Chunk(5);

    if (chunks.Count() != 0)
    {
        toShow = chunks.ElementAt(page - 1).ToList();
    }
}

<div class="discussions-container">
    <div class="discussions-list">
        <h1 class="discussions-title">Обсуждения</h1>

        
        <form method="GET" asp-action="DiscusPage" asp-controller="Home">
            <div class="discussions-search">
                <input type="hidden" name="page" value="1">
                <input type="text" name="filter" placeholder="Поиск по обсуждениям..." value="@(filter ?? "")">
                <button type="submit"><i class="fas fa-search"></i> Найти</button>
            </div>
        </form>
        

        @foreach (var discussion in toShow)
        {
            <div class="discussion-item">
                <a href="@Url.Action("Profile", "Home", new {Id = discussion.AuthorId})">
                    <div class="discussion-header">
                        <img src="@discussion.Author.AvatarUrl" alt="Аватар" class="discussion-avatar">
                        <div>
                            <span class="discussion-user">@discussion.Author.UserName</span>
                            <span class="discussion-time">@discussion.CreatedAt</span>
                        </div>
                    </div>
                </a>
                <a href="/Home/Discussion/@discussion.DiscussionId" style="text-decoration: none;">
                    <h3 class="discussion-title">@discussion.Title</h3>
                    <p class="discussion-text">@discussion.Content</p>
                    @*<div class="discussion-tags pusyn">
                        <span class="discussion-tag">#реквизит</span>
                        <span class="discussion-tag">#советы</span>
                        <span class="discussion-tag">#берсерк</span>
                    </div>*@
                    <div class="discussion-stats">
                        <div class="discussion-stat">
                            <i class="far fa-thumbs-up"></i>
                            <span>@discussion.Likes.Count</span>
                        </div>
                        <div class="discussion-stat">
                            <i class="far fa-comment"></i>
                            <span>@discussion.Comments.Count</span>
                        </div>
                    </div>
                </a>
            </div>
        }
        @if(discussions.Count != 0)
        {
            <div class="pagination">
                @if (page != 1)
                {
                    <a href="@Url.Action("DiscusPage", "Home", new {page = page - 1, filter = filter})" class="page-number">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                }
                <p class="page-number active">@(page)</p>
                @if (page != maxPage)
                {
                    <a href="@Url.Action("DiscusPage", "Home", new {page = page + 1, filter = filter})" class="page-number">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                }
            </div>
        }
        else
        {
            <span>Нет ещё обсуждений!</span>
        }

    </div>

    @if (SignInManager.IsSignedIn(User))
    {
        <aside class="create-discussion">
            <h2 class="create-title">Создать обсуждение</h2>
            <form method="post" asp-action="DiscusPage" asp-controller="Home">
                <div asp-validation-summary="ModelOnly"></div>
                <div class="form-group">
                    <label asp-for="Title">Заголовок</label>
                    <input asp-for="Title" type="text" placeholder="О чем вы хотите спросить?">
                </div>
                <div class="form-group">
                    <label asp-for="Content">Текст обсуждения</label>
                    <textarea asp-for ="Content" placeholder="Опишите ваш вопрос или тему для обсуждения"></textarea>
                </div>
@*                 <div class="form-group">
                    <label asp-for="Tags">Теги (через запятую)</label>
                    <input asp-for="Tags" type="text" id="tags" placeholder="например: косплей, советы, материалы">
                </div> *@
                <button type="submit" class="submit-btn">Опубликовать</button>
            </form>
        </aside>
    }
</div>