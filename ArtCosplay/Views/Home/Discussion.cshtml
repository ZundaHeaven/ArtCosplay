@model CommentViewModel

@using ArtCosplay.Data
@using ArtCosplay.Data.DB
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject AppDbContext DbContext

@{
    ViewData["Title"] = "Обсуждение";

    int discussionId = Convert.ToInt32(ViewData["DiscussionId"]);
    int page = Convert.ToInt32(ViewData["Page"] ?? 1);

    var user = await UserManager.GetUserAsync(User);
    bool isLiked = false;

    Discussion? discussion = DbContext.Discussions
        .Include(d => d.Author)
        .Include(d => d.Comments)
        .Include(d => d.Likes)
        .FirstOrDefault(i => i.DiscussionId == discussionId);


    List<Like> likedComments = new List<Like>();

    if (user != null)
    {
        isLiked = discussion.Likes.FirstOrDefault(x => x.UserId == user.Id) != null;
        likedComments = DbContext.Users.Include(x => x.Likes)
            .First(x => x.Id == user.Id)
            .Likes
            .Where(x => x.CommentId != null)
            .ToList();
    }


    List<Comment> comments = DbContext.Comments
        .Include(d => d.Likes)
        .Include(d => d.User)
        .Where(i => i.DiscussionId == discussionId)
        .OrderByDescending(x => x.CommentId)
        .ToList();
}

<div class="discussion-container">
    <div class="discussion-content">
        
            <div class="discussion-header">
                <a href="@Url.Action("Profile", "Home", new {Id = discussion.AuthorId})">
                    <img src="@discussion.Author.AvatarUrl" alt="Аватар" class="discussion-avatar">
                    <div class="discussion-user-info">
                        <div class="discussion-user">@discussion.Author.UserName</div>
                        <div class="discussion-time">@discussion.CreatedAt.ToString()</div>
                    </div>
                </a>
                @if(SignInManager.IsSignedIn(User))
                {
                    if (discussion.AuthorId == user.Id || await UserManager.IsInRoleAsync(user, "Admin") || await UserManager.IsInRoleAsync(user, "Moderator"))
                    {
                        <i class="fa-solid fa-trash discussion-action" id="delete-post" style="margin-top: -45px;"></i>
                    }
                }
            </div>
        
        <h1 class="discussion-title">@discussion.Title</h1>

        <p class="discussion-text">@discussion.Content</p>

        @*         <div class="discussion-tags">
            <span class="discussion-tag">#naruto</span>
            <span class="discussion-tag">#sakura</span>
            <span class="discussion-tag">#digitalart</span>
            <span class="discussion-tag">#fanart</span>
            <span class="discussion-tag">#anime</span>
        </div> *@

        <div class="discussion-actions">
            <div class="discussion-action@(isLiked ? " liked" : "")" id="discussion-action">
                <i class="far fa-thumbs-up"></i>
                <span>@discussion.Likes.Count</span>
            </div>
            <div class="discussion-action">
                <i class="far fa-comment"></i>
                <span id="post-comments-title">@discussion.Comments.Count комментария</span>
            </div>
        </div>
    </div>

    <div class="comments-section">
        <h2 class="comments-title" id="comments-title">Комментарии (@discussion.Comments.Count)</h2>

        <div class="comment-form">
            <input type="hidden" id="discussion-id" value="@discussionId" />
            <textarea class="comment-textarea" placeholder="Напишите ваш комментарий..." id="comment-textarea" maxlength="300" style="
                display: block;
                width: 100%;
                border-radius: 12px;
                margin-bottom: 15px;
                height: 80px;
                border: none;
                outline: none;
                box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.1);
                padding: 5px;
            "
            ></textarea>
            <button type="submit" class="comment-submit" style="width: 100%; margin-bottom: 10px;" id="comment-send">Отправить</button>
            <p class="validation" id="validation-error"></p>
        </div>

        <div class="comment-list" id="comment-list">
            @if (@discussion.Comments.Count != 0)
            {
                @foreach (var comment in comments)
                {
                    <div class="comment-item">
                        <img src="@comment.User.AvatarUrl" alt="Аватар" class="comment-avatar">
                        <div class="comment-content">
                            <div class="comment-header">
                                <a href="@Url.Action("Profile", "Home", new {Id = comment.UserId})">
                                    <span class="comment-user">@comment.User.UserName</span>
                                    <span class="comment-time">@comment.CreatedAt</span>
                                </a>

                                @if (SignInManager.IsSignedIn(User))
                                {
                                    if (discussion.AuthorId == user.Id || await UserManager.IsInRoleAsync(user, "Admin") || await UserManager.IsInRoleAsync(user, "Moderator"))
                                    {
                                        <i class="fa-solid fa-trash discussion-action" name="delete-comment" style="margin-left: auto;" comment-id="@comment.CommentId"></i>
                                    }
                                }
                            </div>
                            <p class="comment-text">@comment.Text</p>
                            <div class="comment-actions">
                                <div name="like-comment" class="comment-action@(likedComments.FirstOrDefault(x => x.CommentId == comment.CommentId) == null ? string.Empty : " liked")" comment-id="@comment.CommentId">
                                    <i class="far fa-thumbs-up"></i>
                                    <span>@comment.Likes.Count</span>
                                </div>
                                <div class="comment-action">
                                    <i class="fas fa-reply"></i>
                                    <span>Ответить</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
@*                 <div class="pagination">
                    <a href="#" class="page-number">1</a>
                    <a href="#" class="page-number">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </div> *@
            }
            else
            {
                <span id="no-comments">Нет ещё комментариев!</span>
            }
        </div>
    </div>
</div>

<script src="/js/discussionLogic.js"></script>