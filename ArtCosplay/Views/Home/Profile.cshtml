@using ArtCosplay.Data
@using ArtCosplay.Data.DB
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject AppDbContext DbContext

@{
    ViewData["Title"] = "Профиль";

    string? profileId = ViewData["Id"]!.ToString();
    int page = Convert.ToInt32(ViewData["Page"]!.ToString());
    var user = await UserManager.GetUserAsync(User);
    var profileUser = DbContext.Users
        .Include(x => x.Posts)
        .Include(x => x.Likes)
        .Include(x => x.Comments)
        .First(x => x.Id == profileId);

    List<MainPagePost> posts = DbContext.Posts
        .Include(x => x.Likes)
        .Include(x => x.Comments)
        .Include(x => x.Author)
        .Where(x => x.AuthorId == profileUser.Id)
        .Select(x => new MainPagePost { Post = x, CreatedAt = x.CreatedAt })
        .ToList();

    posts.AddRange(DbContext.Discussions
        .Include(x => x.Likes)
        .Include(x => x.Comments)
        .Include(x => x.Author)
        .Where(x => x.AuthorId == profileUser.Id)
        .Select(x => new MainPagePost { Discussion = x, CreatedAt = x.CreatedAt }));

    posts = posts.OrderByDescending(x => x.CreatedAt).ToList();
    int maxPage = Convert.ToInt32(Math.Ceiling(posts.ToList().Count / 5.0));

    if(page <= 0)
    {
        page = 1;
    }
    else if (page > maxPage)
    {
        page = maxPage;
    }
}

<div class="main-container">
    <aside class="profile-sidebar">
        <div class="profile-header">
            <img src="@profileUser.AvatarUrl" alt="Аватар пользователя" class="profile-avatar">
            <h2 class="profile-name">@profileUser.UserName</h2>
        </div>

        <div class="profile-stats">
            <div class="stat-item">
                <div class="stat-number"><i class="fa-solid fa-heart"></i> @profileUser.Likes.Count</div>
                <div class="stat-label">Лайков</div>
            </div>
            <div class="stat-item">
                <div class="stat-number"><i class="fa-solid fa-signs-post"></i> @posts.Count</div>
                <div class="stat-label">Постов</div>
            </div>
            <div class="stat-item">
                <div class="stat-number"><i class="fa-solid fa-message"></i> @profileUser.Comments.Count</div>
                <div class="stat-label">Комментов</div>
            </div>
        </div>

        <div class="profile-bio">
            @profileUser.Bio
        </div>

        <div class="profile-actions">
            @if(user != null)
            {
                @if(user.Id == profileUser.Id)
                {
                    <a href="#" class="profile-button">Редактировать профиль</a>
                }
            }
        </div>
    </aside>

    <main class="main-content">
        @foreach (var item in posts.Chunk(5).ElementAt(page - 1))
        {
            <article class="post">
                <div class="post-header">
                    <img src="@profileUser.AvatarUrl" alt="Аватар" class="post-avatar">
                    <div>
                        <span class="post-user">@profileUser.UserName</span>
                        <span class="post-time">@item.CreatedAt</span>
                    </div>
                </div>
                <a href="@Url.Action(item.Post != null ? "Post" : "Discussion", "Home", new {Id = item.Post != null ? item.Post.PostId : item.Discussion.DiscussionId})">
                    <h3 class="post-title">@(item.Post == null ? item.Discussion.Title : item.Post.Title)</h3>
                    @if (item.Post != null)
                    {
                        <img src="@item.Post.ImageUrl" alt="Пост" class="post-image">
                    }
                    <p class="post-text">@(item.Post == null ? item.Discussion.Content : item.Post.Content)</p>
                    <div class="post-actions">
                        <div class="post-action">
                            <i class="far fa-thumbs-up"></i>
                            <span>@(item.Post == null ? item.Discussion.Likes.Count : item.Post.Likes.Count)</span>
                        </div>
                        <div class="post-action">
                            <i class="far fa-comment"></i>
                            <span>@(item.Post == null ? item.Discussion.Comments.Count : item.Post.Comments.Count)</span>
                        </div>
                    </div>
                </a>
            </article>
        }

        <div class="pagination">
            @if (page != 1)
            {
                <a href="@Url.Action("Profile", "Home", new {Id = profileId, Page = page - 1})" class="page-number">
                    <i class="fas fa-chevron-left"></i>
                </a>
            }
            <p class="page-number active">@(page)</p>
            @if (page != maxPage)
            {
                <a href="@Url.Action("Profile", "Home", new {Id = profileId, Page = page + 1})" class="page-number">
                    <i class="fas fa-chevron-right"></i>
                </a>
            }
        </div>
    </main>
</div>